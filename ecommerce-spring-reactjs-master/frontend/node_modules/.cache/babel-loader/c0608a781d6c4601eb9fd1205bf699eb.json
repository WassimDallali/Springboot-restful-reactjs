{"ast":null,"code":"import { LOGOUT_SUCCESS } from \"../action-types/auth-action-types\";\nimport { FETCH_USER_SUCCESS, USER_ADDED_REVIEW_FAILURE, USER_ADDED_REVIEW_SUCCESS, USER_UPDATED_FAILURE, USER_UPDATED_PASSWORD_FAILURE, USER_UPDATED_PASSWORD_SUCCESS, USER_UPDATED_SUCCESS, RESET_INPUT_FORM, FETCH_USER_BY_QUERY_SUCCESS, LOADING_USER_INFO } from \"../action-types/user-actions-types\";\nconst initialState = {\n  user: {},\n  isLoggedIn: false,\n  isLoaded: false,\n  successMessage: \"\",\n  userEditErrors: {},\n  userResetPasswordErrors: {},\n  reviewErrors: {},\n  isReviewAdded: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOADING_USER_INFO:\n      return { ...state,\n        isLoaded: true\n      };\n\n    case FETCH_USER_SUCCESS:\n      return { ...state,\n        user: action.payload,\n        isLoggedIn: true,\n        isLoaded: false\n      };\n\n    case USER_UPDATED_SUCCESS:\n      return { ...state,\n        user: action.payload,\n        userEditErrors: {}\n      };\n\n    case USER_UPDATED_FAILURE:\n      return { ...state,\n        userEditErrors: action.payload\n      };\n\n    case USER_UPDATED_PASSWORD_SUCCESS:\n      return { ...state,\n        successMessage: action.payload,\n        userResetPasswordErrors: {}\n      };\n\n    case USER_UPDATED_PASSWORD_FAILURE:\n      return { ...state,\n        userResetPasswordErrors: action.payload\n      };\n\n    case USER_ADDED_REVIEW_SUCCESS:\n      return { ...state,\n        reviewErrors: {},\n        isReviewAdded: true\n      };\n\n    case USER_ADDED_REVIEW_FAILURE:\n      return { ...state,\n        reviewErrors: action.payload,\n        isReviewAdded: false\n      };\n\n    case RESET_INPUT_FORM:\n      return { ...state,\n        userResetPasswordErrors: {},\n        successMessage: \"\",\n        userEditErrors: {},\n        reviewErrors: {}\n      };\n\n    case LOGOUT_SUCCESS:\n      return { ...state,\n        user: {},\n        isLoggedIn: false\n      };\n\n    case FETCH_USER_BY_QUERY_SUCCESS:\n      return { ...state,\n        user: action.payload,\n        isLoggedIn: true,\n        isLoaded: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/HP/Desktop/project/ecommerce-spring-reactjs-master/frontend/src/redux/reducers/user-reducer.ts"],"names":["LOGOUT_SUCCESS","FETCH_USER_SUCCESS","USER_ADDED_REVIEW_FAILURE","USER_ADDED_REVIEW_SUCCESS","USER_UPDATED_FAILURE","USER_UPDATED_PASSWORD_FAILURE","USER_UPDATED_PASSWORD_SUCCESS","USER_UPDATED_SUCCESS","RESET_INPUT_FORM","FETCH_USER_BY_QUERY_SUCCESS","LOADING_USER_INFO","initialState","user","isLoggedIn","isLoaded","successMessage","userEditErrors","userResetPasswordErrors","reviewErrors","isReviewAdded","reducer","state","action","type","payload"],"mappings":"AACA,SAASA,cAAT,QAA+B,mCAA/B;AACA,SACIC,kBADJ,EAEIC,yBAFJ,EAGIC,yBAHJ,EAIIC,oBAJJ,EAKIC,6BALJ,EAMIC,6BANJ,EAOIC,oBAPJ,EAQIC,gBARJ,EASIC,2BATJ,EAUIC,iBAVJ,QAYO,oCAZP;AAyBA,MAAMC,YAA8B,GAAG;AACnCC,EAAAA,IAAI,EAAE,EAD6B;AAEnCC,EAAAA,UAAU,EAAE,KAFuB;AAGnCC,EAAAA,QAAQ,EAAE,KAHyB;AAInCC,EAAAA,cAAc,EAAE,EAJmB;AAKnCC,EAAAA,cAAc,EAAE,EALmB;AAMnCC,EAAAA,uBAAuB,EAAE,EANU;AAOnCC,EAAAA,YAAY,EAAE,EAPqB;AAQnCC,EAAAA,aAAa,EAAE;AARoB,CAAvC;;AAWA,MAAMC,OAAO,GAAG,CAACC,KAAuB,GAAGV,YAA3B,EAAyCW,MAAzC,KAAwF;AAEpG,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,iBAAL;AACI,aAAO,EAAC,GAAGW,KAAJ;AAAWP,QAAAA,QAAQ,EAAE;AAArB,OAAP;;AAEJ,SAAKb,kBAAL;AACI,aAAO,EAAC,GAAGoB,KAAJ;AAAWT,QAAAA,IAAI,EAAEU,MAAM,CAACE,OAAxB;AAAiCX,QAAAA,UAAU,EAAE,IAA7C;AAAmDC,QAAAA,QAAQ,EAAE;AAA7D,OAAP;;AAEJ,SAAKP,oBAAL;AACI,aAAO,EAAC,GAAGc,KAAJ;AAAWT,QAAAA,IAAI,EAAEU,MAAM,CAACE,OAAxB;AAAiCR,QAAAA,cAAc,EAAE;AAAjD,OAAP;;AAEJ,SAAKZ,oBAAL;AACI,aAAO,EAAC,GAAGiB,KAAJ;AAAWL,QAAAA,cAAc,EAAEM,MAAM,CAACE;AAAlC,OAAP;;AAEJ,SAAKlB,6BAAL;AACI,aAAO,EAAC,GAAGe,KAAJ;AAAWN,QAAAA,cAAc,EAAEO,MAAM,CAACE,OAAlC;AAA2CP,QAAAA,uBAAuB,EAAE;AAApE,OAAP;;AAEJ,SAAKZ,6BAAL;AACI,aAAO,EAAC,GAAGgB,KAAJ;AAAWJ,QAAAA,uBAAuB,EAAEK,MAAM,CAACE;AAA3C,OAAP;;AAEJ,SAAKrB,yBAAL;AACI,aAAO,EAAC,GAAGkB,KAAJ;AAAWH,QAAAA,YAAY,EAAE,EAAzB;AAA6BC,QAAAA,aAAa,EAAE;AAA5C,OAAP;;AAEJ,SAAKjB,yBAAL;AACI,aAAO,EAAC,GAAGmB,KAAJ;AAAWH,QAAAA,YAAY,EAAEI,MAAM,CAACE,OAAhC;AAAyCL,QAAAA,aAAa,EAAE;AAAxD,OAAP;;AAEJ,SAAKX,gBAAL;AACI,aAAO,EAAC,GAAGa,KAAJ;AAAWJ,QAAAA,uBAAuB,EAAE,EAApC;AAAwCF,QAAAA,cAAc,EAAE,EAAxD;AAA4DC,QAAAA,cAAc,EAAE,EAA5E;AAAgFE,QAAAA,YAAY,EAAE;AAA9F,OAAP;;AAEJ,SAAKlB,cAAL;AACI,aAAO,EAAC,GAAGqB,KAAJ;AAAWT,QAAAA,IAAI,EAAE,EAAjB;AAAqBC,QAAAA,UAAU,EAAE;AAAjC,OAAP;;AAEJ,SAAKJ,2BAAL;AACI,aAAO,EAAC,GAAGY,KAAJ;AAAWT,QAAAA,IAAI,EAAEU,MAAM,CAACE,OAAxB;AAAiCX,QAAAA,UAAU,EAAE,IAA7C;AAAmDC,QAAAA,QAAQ,EAAE;AAA7D,OAAP;;AAEJ;AACI,aAAOO,KAAP;AAnCR;AAqCH,CAvCD;;AAyCA,eAAeD,OAAf","sourcesContent":["import {AuthErrors, ReviewError, User, UserEditErrors} from \"../../types/types\";\nimport { LOGOUT_SUCCESS } from \"../action-types/auth-action-types\";\nimport {\n    FETCH_USER_SUCCESS,\n    USER_ADDED_REVIEW_FAILURE,\n    USER_ADDED_REVIEW_SUCCESS,\n    USER_UPDATED_FAILURE,\n    USER_UPDATED_PASSWORD_FAILURE,\n    USER_UPDATED_PASSWORD_SUCCESS,\n    USER_UPDATED_SUCCESS,\n    RESET_INPUT_FORM,\n    FETCH_USER_BY_QUERY_SUCCESS,\n    LOADING_USER_INFO,\n    UserActionsTypes\n} from \"../action-types/user-actions-types\";\n\nexport type InitialStateType = {\n    user: Partial<User>\n    isLoggedIn: boolean\n    isLoaded: boolean\n    successMessage: string\n    userEditErrors: Partial<UserEditErrors>\n    userResetPasswordErrors: Partial<AuthErrors>\n    reviewErrors: Partial<ReviewError>\n    isReviewAdded: boolean\n};\n\nconst initialState: InitialStateType = {\n    user: {},\n    isLoggedIn: false,\n    isLoaded: false,\n    successMessage: \"\",\n    userEditErrors: {},\n    userResetPasswordErrors: {},\n    reviewErrors: {},\n    isReviewAdded: false\n};\n\nconst reducer = (state: InitialStateType = initialState, action: UserActionsTypes): InitialStateType => {\n\n    switch (action.type) {\n        case LOADING_USER_INFO:\n            return {...state, isLoaded: true}\n\n        case FETCH_USER_SUCCESS:\n            return {...state, user: action.payload, isLoggedIn: true, isLoaded: false}\n\n        case USER_UPDATED_SUCCESS:\n            return {...state, user: action.payload, userEditErrors: {}};\n\n        case USER_UPDATED_FAILURE:\n            return {...state, userEditErrors: action.payload};\n\n        case USER_UPDATED_PASSWORD_SUCCESS:\n            return {...state, successMessage: action.payload, userResetPasswordErrors: {}};\n\n        case USER_UPDATED_PASSWORD_FAILURE:\n            return {...state, userResetPasswordErrors: action.payload};\n\n        case USER_ADDED_REVIEW_SUCCESS:\n            return {...state, reviewErrors: {}, isReviewAdded: true};\n\n        case USER_ADDED_REVIEW_FAILURE:\n            return {...state, reviewErrors: action.payload, isReviewAdded: false};\n\n        case RESET_INPUT_FORM:\n            return {...state, userResetPasswordErrors: {}, successMessage: \"\", userEditErrors: {}, reviewErrors: {}};\n\n        case LOGOUT_SUCCESS:\n            return {...state, user: {}, isLoggedIn: false}\n\n        case FETCH_USER_BY_QUERY_SUCCESS:\n            return {...state, user: action.payload, isLoggedIn: true, isLoaded: false}\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}