{"ast":null,"code":"import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n */\n\nexport function LoneAnonymousOperationRule(context) {\n  var operationCount = 0;\n  return {\n    Document: function Document(node) {\n      operationCount = node.definitions.filter(function (definition) {\n        return definition.kind === Kind.OPERATION_DEFINITION;\n      }).length;\n    },\n    OperationDefinition: function OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(new GraphQLError('This anonymous operation must be the only defined operation.', node));\n      }\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/HP/Desktop/project/ecommerce-spring-reactjs-master/frontend/node_modules/graphql/validation/rules/LoneAnonymousOperationRule.mjs"],"names":["GraphQLError","Kind","LoneAnonymousOperationRule","context","operationCount","Document","node","definitions","filter","definition","kind","OPERATION_DEFINITION","length","OperationDefinition","name","reportError"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AACA,SAASC,IAAT,QAAqB,0BAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,0BAAT,CAAoCC,OAApC,EAA6C;AAClD,MAAIC,cAAc,GAAG,CAArB;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AAChCF,MAAAA,cAAc,GAAGE,IAAI,CAACC,WAAL,CAAiBC,MAAjB,CAAwB,UAAUC,UAAV,EAAsB;AAC7D,eAAOA,UAAU,CAACC,IAAX,KAAoBT,IAAI,CAACU,oBAAhC;AACD,OAFgB,EAEdC,MAFH;AAGD,KALI;AAMLC,IAAAA,mBAAmB,EAAE,SAASA,mBAAT,CAA6BP,IAA7B,EAAmC;AACtD,UAAI,CAACA,IAAI,CAACQ,IAAN,IAAcV,cAAc,GAAG,CAAnC,EAAsC;AACpCD,QAAAA,OAAO,CAACY,WAAR,CAAoB,IAAIf,YAAJ,CAAiB,8DAAjB,EAAiFM,IAAjF,CAApB;AACD;AACF;AAVI,GAAP;AAYD","sourcesContent":["import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n */\nexport function LoneAnonymousOperationRule(context) {\n  var operationCount = 0;\n  return {\n    Document: function Document(node) {\n      operationCount = node.definitions.filter(function (definition) {\n        return definition.kind === Kind.OPERATION_DEFINITION;\n      }).length;\n    },\n    OperationDefinition: function OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(new GraphQLError('This anonymous operation must be the only defined operation.', node));\n      }\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}