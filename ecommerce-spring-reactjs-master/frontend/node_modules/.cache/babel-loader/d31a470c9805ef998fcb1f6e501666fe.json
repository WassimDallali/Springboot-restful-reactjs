{"ast":null,"code":"import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n */\n\nexport function UniqueInputFieldNamesRule(context) {\n  var knownNameStack = [];\n  var knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter: function enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave: function leave() {\n        knownNames = knownNameStack.pop();\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(new GraphQLError(\"There can be only one input field named \\\"\".concat(fieldName, \"\\\".\"), [knownNames[fieldName], node.name]));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/HP/Desktop/project/ecommerce-spring-reactjs-master/frontend/node_modules/graphql/validation/rules/UniqueInputFieldNamesRule.mjs"],"names":["GraphQLError","UniqueInputFieldNamesRule","context","knownNameStack","knownNames","Object","create","ObjectValue","enter","push","leave","pop","ObjectField","node","fieldName","name","value","reportError","concat"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,yBAAT,CAAmCC,OAAnC,EAA4C;AACjD,MAAIC,cAAc,GAAG,EAArB;AACA,MAAIC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAjB;AACA,SAAO;AACLC,IAAAA,WAAW,EAAE;AACXC,MAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtBL,QAAAA,cAAc,CAACM,IAAf,CAAoBL,UAApB;AACAA,QAAAA,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAb;AACD,OAJU;AAKXI,MAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtBN,QAAAA,UAAU,GAAGD,cAAc,CAACQ,GAAf,EAAb;AACD;AAPU,KADR;AAULC,IAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AACtC,UAAIC,SAAS,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAA1B;;AAEA,UAAIZ,UAAU,CAACU,SAAD,CAAd,EAA2B;AACzBZ,QAAAA,OAAO,CAACe,WAAR,CAAoB,IAAIjB,YAAJ,CAAiB,6CAA6CkB,MAA7C,CAAoDJ,SAApD,EAA+D,KAA/D,CAAjB,EAAwF,CAACV,UAAU,CAACU,SAAD,CAAX,EAAwBD,IAAI,CAACE,IAA7B,CAAxF,CAApB;AACD,OAFD,MAEO;AACLX,QAAAA,UAAU,CAACU,SAAD,CAAV,GAAwBD,IAAI,CAACE,IAA7B;AACD;AACF;AAlBI,GAAP;AAoBD","sourcesContent":["import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n */\nexport function UniqueInputFieldNamesRule(context) {\n  var knownNameStack = [];\n  var knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter: function enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave: function leave() {\n        knownNames = knownNameStack.pop();\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(new GraphQLError(\"There can be only one input field named \\\"\".concat(fieldName, \"\\\".\"), [knownNames[fieldName], node.name]));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}