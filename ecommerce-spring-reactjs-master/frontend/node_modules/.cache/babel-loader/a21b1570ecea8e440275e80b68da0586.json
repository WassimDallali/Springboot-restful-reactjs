{"ast":null,"code":"import { activateAccountFailure, activateAccountSuccess, forgotPasswordFailure, forgotPasswordSuccess, loginFailure, loginSuccess, logoutSuccess, registerFailure, registerSuccess, resetPasswordCodeFailure, resetPasswordCodeSuccess, resetPasswordFailure, resetPasswordSuccess, showLoader } from \"../actions/auth-actions\";\nimport { reset } from \"../actions/admin-actions\";\nimport RequestService from '../../utils/request-service';\nexport const login = (userData, history) => async dispatch => {\n  try {\n    const response = await RequestService.post(\"/auth/login\", userData);\n    localStorage.setItem(\"email\", response.data.email);\n    localStorage.setItem(\"token\", response.data.token);\n    localStorage.setItem(\"userRole\", response.data.userRole);\n    localStorage.setItem(\"isLoggedIn\", \"true\");\n    dispatch(loginSuccess(response.data.userRole));\n    history.push(\"/account\");\n  } catch (error) {\n    dispatch(loginFailure(error.response.data));\n  }\n};\nexport const registration = userRegistrationData => async dispatch => {\n  try {\n    dispatch(showLoader());\n    await RequestService.post(\"/registration\", userRegistrationData);\n    dispatch(registerSuccess());\n  } catch (error) {\n    dispatch(registerFailure(error.response.data));\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"email\");\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userRole\");\n  localStorage.removeItem(\"isLoggedIn\");\n  dispatch(logoutSuccess());\n};\nexport const activateAccount = code => async dispatch => {\n  try {\n    const response = await RequestService.get(\"/registration/activate/\" + code);\n    dispatch(activateAccountSuccess(response.data));\n  } catch (error) {\n    dispatch(activateAccountFailure(error.response.data));\n  }\n};\nexport const forgotPassword = email => async dispatch => {\n  try {\n    dispatch(showLoader());\n    const response = await RequestService.post(\"/auth/forgot\", email);\n    dispatch(forgotPasswordSuccess(response.data));\n  } catch (error) {\n    dispatch(forgotPasswordFailure(error.response.data));\n  }\n};\nexport const fetchResetPasswordCode = code => async dispatch => {\n  try {\n    const response = await RequestService.get(\"/auth/reset/\" + code);\n    dispatch(resetPasswordCodeSuccess(response.data));\n  } catch (error) {\n    dispatch(resetPasswordCodeFailure(error.response.data));\n  }\n};\nexport const resetPassword = (data, history) => async dispatch => {\n  try {\n    const response = await RequestService.post(\"/auth/reset\", data);\n    dispatch(resetPasswordSuccess(response.data));\n    history.push(\"/login\");\n  } catch (error) {\n    dispatch(resetPasswordFailure(error.response.data));\n  }\n};\nexport const formReset = () => async dispatch => {\n  dispatch(reset());\n};","map":{"version":3,"sources":["C:/Users/HP/Desktop/project/ecommerce-spring-reactjs-master/frontend/src/redux/thunks/auth-thunks.ts"],"names":["activateAccountFailure","activateAccountSuccess","forgotPasswordFailure","forgotPasswordSuccess","loginFailure","loginSuccess","logoutSuccess","registerFailure","registerSuccess","resetPasswordCodeFailure","resetPasswordCodeSuccess","resetPasswordFailure","resetPasswordSuccess","showLoader","reset","RequestService","login","userData","history","dispatch","response","post","localStorage","setItem","data","email","token","userRole","push","error","registration","userRegistrationData","logout","removeItem","activateAccount","code","get","forgotPassword","fetchResetPasswordCode","resetPassword","formReset"],"mappings":"AAAA,SACIA,sBADJ,EAEIC,sBAFJ,EAGIC,qBAHJ,EAIIC,qBAJJ,EAKIC,YALJ,EAMIC,YANJ,EAOIC,aAPJ,EAQIC,eARJ,EASIC,eATJ,EAUIC,wBAVJ,EAWIC,wBAXJ,EAYIC,oBAZJ,EAaIC,oBAbJ,EAcIC,UAdJ,QAeO,yBAfP;AAgBA,SAAQC,KAAR,QAAoB,0BAApB;AAGA,OAAOC,cAAP,MAA2B,6BAA3B;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAqBC,OAArB,KAAsC,MAAOC,QAAP,IAA8B;AACrF,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAML,cAAc,CAACM,IAAf,CAAoB,aAApB,EAAmCJ,QAAnC,CAAvB;AACAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,QAAQ,CAACI,IAAT,CAAcC,KAA5C;AACAH,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,QAAQ,CAACI,IAAT,CAAcE,KAA5C;AACAJ,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,QAAQ,CAACI,IAAT,CAAcG,QAA/C;AACAL,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,MAAnC;AACAJ,IAAAA,QAAQ,CAACd,YAAY,CAACe,QAAQ,CAACI,IAAT,CAAcG,QAAf,CAAb,CAAR;AACAT,IAAAA,OAAO,CAACU,IAAR,CAAa,UAAb;AACH,GARD,CAQE,OAAOC,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAACf,YAAY,CAACyB,KAAK,CAACT,QAAN,CAAeI,IAAhB,CAAb,CAAR;AACH;AACJ,CAZM;AAcP,OAAO,MAAMM,YAAY,GAAIC,oBAAD,IAA4C,MAAOZ,QAAP,IAA8B;AAClG,MAAI;AACAA,IAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACA,UAAME,cAAc,CAACM,IAAf,CAAoB,eAApB,EAAqCU,oBAArC,CAAN;AACAZ,IAAAA,QAAQ,CAACX,eAAe,EAAhB,CAAR;AACH,GAJD,CAIE,OAAOqB,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAACZ,eAAe,CAACsB,KAAK,CAACT,QAAN,CAAeI,IAAhB,CAAhB,CAAR;AACH;AACJ,CARM;AAUP,OAAO,MAAMQ,MAAM,GAAG,MAAM,MAAOb,QAAP,IAA8B;AACtDG,EAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACAX,EAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACAX,EAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB;AACAX,EAAAA,YAAY,CAACW,UAAb,CAAwB,YAAxB;AACAd,EAAAA,QAAQ,CAACb,aAAa,EAAd,CAAR;AACH,CANM;AAQP,OAAO,MAAM4B,eAAe,GAAIC,IAAD,IAAkB,MAAOhB,QAAP,IAA8B;AAC3E,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAML,cAAc,CAACqB,GAAf,CAAmB,4BAA4BD,IAA/C,CAAvB;AACAhB,IAAAA,QAAQ,CAAClB,sBAAsB,CAACmB,QAAQ,CAACI,IAAV,CAAvB,CAAR;AACH,GAHD,CAGE,OAAOK,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAACnB,sBAAsB,CAAC6B,KAAK,CAACT,QAAN,CAAeI,IAAhB,CAAvB,CAAR;AACH;AACJ,CAPM;AASP,OAAO,MAAMa,cAAc,GAAIZ,KAAD,IAA8B,MAAON,QAAP,IAA8B;AACtF,MAAI;AACAA,IAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACA,UAAMO,QAAQ,GAAG,MAAML,cAAc,CAACM,IAAf,CAAoB,cAApB,EAAoCI,KAApC,CAAvB;AACAN,IAAAA,QAAQ,CAAChB,qBAAqB,CAACiB,QAAQ,CAACI,IAAV,CAAtB,CAAR;AACH,GAJD,CAIE,OAAOK,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAACjB,qBAAqB,CAAC2B,KAAK,CAACT,QAAN,CAAeI,IAAhB,CAAtB,CAAR;AACH;AACJ,CARM;AAUP,OAAO,MAAMc,sBAAsB,GAAIH,IAAD,IAAkB,MAAOhB,QAAP,IAA8B;AAClF,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAML,cAAc,CAACqB,GAAf,CAAmB,iBAAiBD,IAApC,CAAvB;AACAhB,IAAAA,QAAQ,CAACT,wBAAwB,CAACU,QAAQ,CAACI,IAAV,CAAzB,CAAR;AACH,GAHD,CAGE,OAAOK,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAACV,wBAAwB,CAACoB,KAAK,CAACT,QAAN,CAAeI,IAAhB,CAAzB,CAAR;AACH;AACJ,CAPM;AASP,OAAO,MAAMe,aAAa,GAAG,CAACf,IAAD,EAA8BN,OAA9B,KAA+C,MAAOC,QAAP,IAA8B;AACtG,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAML,cAAc,CAACM,IAAf,CAAoB,aAApB,EAAmCG,IAAnC,CAAvB;AACAL,IAAAA,QAAQ,CAACP,oBAAoB,CAACQ,QAAQ,CAACI,IAAV,CAArB,CAAR;AACAN,IAAAA,OAAO,CAACU,IAAR,CAAa,QAAb;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAACR,oBAAoB,CAACkB,KAAK,CAACT,QAAN,CAAeI,IAAhB,CAArB,CAAR;AACH;AACJ,CARM;AAUP,OAAO,MAAMgB,SAAS,GAAG,MAAM,MAAOrB,QAAP,IAA8B;AACzDA,EAAAA,QAAQ,CAACL,KAAK,EAAN,CAAR;AACH,CAFM","sourcesContent":["import {\n    activateAccountFailure,\n    activateAccountSuccess,\n    forgotPasswordFailure,\n    forgotPasswordSuccess,\n    loginFailure,\n    loginSuccess,\n    logoutSuccess,\n    registerFailure,\n    registerSuccess,\n    resetPasswordCodeFailure,\n    resetPasswordCodeSuccess,\n    resetPasswordFailure,\n    resetPasswordSuccess,\n    showLoader\n} from \"../actions/auth-actions\";\nimport {reset} from \"../actions/admin-actions\";\nimport {UserData, UserRegistration, UserResetPasswordData} from \"../../types/types\";\nimport {Dispatch} from \"redux\";\nimport RequestService from '../../utils/request-service';\n\nexport const login = (userData: UserData, history: any) => async (dispatch: Dispatch) => {\n    try {\n        const response = await RequestService.post(\"/auth/login\", userData);\n        localStorage.setItem(\"email\", response.data.email);\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"userRole\", response.data.userRole);\n        localStorage.setItem(\"isLoggedIn\", \"true\");\n        dispatch(loginSuccess(response.data.userRole));\n        history.push(\"/account\");\n    } catch (error) {\n        dispatch(loginFailure(error.response.data));\n    }\n};\n\nexport const registration = (userRegistrationData: UserRegistration) => async (dispatch: Dispatch) => {\n    try {\n        dispatch(showLoader());\n        await RequestService.post(\"/registration\", userRegistrationData);\n        dispatch(registerSuccess());\n    } catch (error) {\n        dispatch(registerFailure(error.response.data));\n    }\n};\n\nexport const logout = () => async (dispatch: Dispatch) => {\n    localStorage.removeItem(\"email\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userRole\");\n    localStorage.removeItem(\"isLoggedIn\");\n    dispatch(logoutSuccess());\n};\n\nexport const activateAccount = (code: string) => async (dispatch: Dispatch) => {\n    try {\n        const response = await RequestService.get(\"/registration/activate/\" + code);\n        dispatch(activateAccountSuccess(response.data));\n    } catch (error) {\n        dispatch(activateAccountFailure(error.response.data));\n    }\n};\n\nexport const forgotPassword = (email: { email: string }) => async (dispatch: Dispatch) => {\n    try {\n        dispatch(showLoader());\n        const response = await RequestService.post(\"/auth/forgot\", email);\n        dispatch(forgotPasswordSuccess(response.data));\n    } catch (error) {\n        dispatch(forgotPasswordFailure(error.response.data));\n    }\n};\n\nexport const fetchResetPasswordCode = (code: string) => async (dispatch: Dispatch) => {\n    try {\n        const response = await RequestService.get(\"/auth/reset/\" + code);\n        dispatch(resetPasswordCodeSuccess(response.data));\n    } catch (error) {\n        dispatch(resetPasswordCodeFailure(error.response.data));\n    }\n};\n\nexport const resetPassword = (data: UserResetPasswordData, history: any) => async (dispatch: Dispatch) => {\n    try {\n        const response = await RequestService.post(\"/auth/reset\", data);\n        dispatch(resetPasswordSuccess(response.data));\n        history.push(\"/login\");\n    } catch (error) {\n        dispatch(resetPasswordFailure(error.response.data));\n    }\n};\n\nexport const formReset = () => async (dispatch: Dispatch) => {\n    dispatch(reset());\n};\n"]},"metadata":{},"sourceType":"module"}