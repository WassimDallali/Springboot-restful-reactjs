{"ast":null,"code":"import { useBaseQuery } from \"./utils/useBaseQuery.js\";\nexport function useQuery(query, options) {\n  return useBaseQuery(query, options, false);\n}","map":{"version":3,"sources":["../../../src/react/hooks/useQuery.ts"],"names":[],"mappings":"AAIA,SAAS,YAAT,QAA6B,yBAA7B;AAGA,OAAM,SAAU,QAAV,CACJ,KADI,EAEJ,OAFI,EAEyC;AAE7C,SAAO,YAAY,CAAoB,KAApB,EAA2B,OAA3B,EAAoC,KAApC,CAAnB;AAID","sourcesContent":["import { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport { QueryHookOptions, QueryResult } from '../types/types';\nimport { useBaseQuery } from './utils/useBaseQuery';\nimport { OperationVariables } from '../../core';\n\nexport function useQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, false) as QueryResult<\n    TData,\n    TVariables\n  >;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}