{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\project\\\\ecommerce-spring-reactjs-master\\\\frontend\\\\src\\\\pages\\\\ResetPassword\\\\ResetPassword.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLock, faSync, faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport { fetchResetPasswordCode, formReset, resetPassword } from \"../../redux/thunks/auth-thunks\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ResetPassword = ({\n  match\n}) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user = useSelector(state => state.auth.user);\n  const error = useSelector(state => state.auth.error);\n  const errors = useSelector(state => state.auth.errors);\n  const {\n    passwordError,\n    password2Error\n  } = errors;\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  useEffect(() => {\n    dispatch(formReset());\n\n    if (match.params.code) {\n      dispatch(fetchResetPasswordCode(match.params.code));\n    }\n  }, []);\n\n  const onClickReset = event => {\n    event.preventDefault();\n    const userResetPasswordData = {\n      email: user.email,\n      password,\n      password2\n    };\n    dispatch(resetPassword(userResetPasswordData, history));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"mr-2\",\n    icon: faSync,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), \" RESET PASSWORD\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), error ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger col-6\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, error) : null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onClickReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-sm-2 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Password: \"), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    style: {\n      position: \"relative\",\n      top: \"8px\"\n    },\n    icon: faLock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    className: passwordError ? \"form-control is-invalid\" : \"form-control\",\n    onChange: event => setPassword(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, passwordError))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-sm-2 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Confirm password: \"), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    style: {\n      position: \"relative\",\n      top: \"8px\"\n    },\n    icon: faLock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password2\",\n    value: password2,\n    className: password2Error ? \"form-control is-invalid\" : \"form-control\",\n    onChange: event => setPassword2(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, password2Error))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-dark mx-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"mr-3\",\n    icon: faUndo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }), \"Reset\"))));\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["C:/Users/HP/Desktop/project/ecommerce-spring-reactjs-master/frontend/src/pages/ResetPassword/ResetPassword.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","FontAwesomeIcon","faLock","faSync","faUndo","fetchResetPasswordCode","formReset","resetPassword","useHistory","ResetPassword","match","dispatch","history","user","state","auth","error","errors","passwordError","password2Error","password","setPassword","password2","setPassword2","params","code","onClickReset","event","preventDefault","userResetPasswordData","email","position","top","target","value"],"mappings":"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","sourcesContent":["import React, {FC, FormEvent, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faLock, faSync, faUndo} from \"@fortawesome/free-solid-svg-icons\";\n\nimport {fetchResetPasswordCode, formReset, resetPassword} from \"../../redux/thunks/auth-thunks\";\nimport {RouteComponentProps, useHistory} from \"react-router-dom\";\nimport {AppStateType} from \"../../redux/reducers/root-reducer\";\nimport {AuthErrors, User, UserResetPasswordData} from \"../../types/types\";\n\nconst ResetPassword: FC<RouteComponentProps<{ code: string }>> = ({match}) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const user: Partial<User> = useSelector((state: AppStateType) => state.auth.user);\n    const error: string = useSelector((state: AppStateType) => state.auth.error);\n    const errors: Partial<AuthErrors> = useSelector((state: AppStateType) => state.auth.errors);\n    const {passwordError, password2Error} = errors;\n    const [password, setPassword] = useState<string>(\"\");\n    const [password2, setPassword2] = useState<string>(\"\");\n\n    useEffect(() => {\n        dispatch(formReset());\n\n        if (match.params.code) {\n            dispatch(fetchResetPasswordCode(match.params.code));\n        }\n    }, []);\n\n    const onClickReset = (event: FormEvent<HTMLFormElement>): void => {\n        event.preventDefault();\n        const userResetPasswordData: UserResetPasswordData = {email: user.email, password, password2};\n        dispatch(resetPassword(userResetPasswordData, history));\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <h4><FontAwesomeIcon className=\"mr-2\" icon={faSync}/> RESET PASSWORD</h4>\n            <hr/>\n            {error ?\n                <div className=\"alert alert-danger col-6\" role=\"alert\">{error}</div> : null}\n            <form onSubmit={onClickReset}>\n                <div className=\"form-group row\">\n                    <label className=\"col-sm-2 col-form-label\">Password: </label>\n                    <FontAwesomeIcon style={{position: \"relative\", top: \"8px\"}} icon={faLock}/>\n                    <div className=\"col-sm-4\">\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            value={password}\n                            className={passwordError ? \"form-control is-invalid\" : \"form-control\"}\n                            onChange={(event) => setPassword(event.target.value)}/>\n                        <div className=\"invalid-feedback\">{passwordError}</div>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label className=\"col-sm-2 col-form-label\">Confirm password: </label>\n                    <FontAwesomeIcon style={{position: \"relative\", top: \"8px\"}} icon={faLock}/>\n                    <div className=\"col-sm-4\">\n                        <input\n                            type=\"password\"\n                            name=\"password2\"\n                            value={password2}\n                            className={password2Error ? \"form-control is-invalid\" : \"form-control\"}\n                            onChange={(event) => setPassword2(event.target.value)}/>\n                        <div className=\"invalid-feedback\">{password2Error}</div>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <button type=\"submit\" className=\"btn btn-dark mx-3\">\n                        <FontAwesomeIcon className=\"mr-3\" icon={faUndo}/>Reset\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}