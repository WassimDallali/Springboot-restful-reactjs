{"ast":null,"code":"import { InvariantError } from 'ts-invariant';\nexport var checkFetcher = function (fetcher) {\n  if (!fetcher && typeof fetch === 'undefined') {\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(22) : new InvariantError(\"\\n\\\"fetch\\\" has not been found globally and no fetcher has been configured. To fix this, install a fetch package (like https://www.npmjs.com/package/cross-fetch), instantiate the fetcher, and pass it into your HttpLink constructor. For example:\\n\\nimport fetch from 'cross-fetch';\\nimport { ApolloClient, HttpLink } from '@apollo/client';\\nconst client = new ApolloClient({\\n  link: new HttpLink({ uri: '/graphql', fetch })\\n});\\n    \");\n  }\n};","map":{"version":3,"sources":["../../../src/link/http/checkFetcher.ts"],"names":[],"mappings":"AAAA,SAAS,cAAT,QAA+B,cAA/B;AAEA,OAAO,IAAM,YAAY,GAAG,UAAC,OAAD,EAAwD;AAClF,MAAI,CAAC,OAAD,IAAY,OAAO,KAAP,KAAiB,WAAjC,EAA8C;AAC5C,UAAM,OAAI,CAAA,GAAJ,CAAI,QAAJ,KAAmB,YAAnB,GAAmB,IAAA,cAAA,CAAA,EAAA,CAAnB,GAAmB,IAAA,cAAA,CAAA,obAAA,CAAzB;AAYD;AACF,CAfM","sourcesContent":["import { InvariantError } from 'ts-invariant';\n\nexport const checkFetcher = (fetcher: WindowOrWorkerGlobalScope['fetch'] | undefined) => {\n  if (!fetcher && typeof fetch === 'undefined') {\n    throw new InvariantError(`\n\"fetch\" has not been found globally and no fetcher has been \\\nconfigured. To fix this, install a fetch package (like \\\nhttps://www.npmjs.com/package/cross-fetch), instantiate the \\\nfetcher, and pass it into your HttpLink constructor. For example:\n\nimport fetch from 'cross-fetch';\nimport { ApolloClient, HttpLink } from '@apollo/client';\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: '/graphql', fetch })\n});\n    `);\n  }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}