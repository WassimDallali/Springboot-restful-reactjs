{"ast":null,"code":"import { ACTIVATE_ACCOUNT_FAILURE, ACTIVATE_ACCOUNT_SUCCESS, FORGOT_PASSWORD_FAILURE, FORGOT_PASSWORD_SUCCESS, LOGIN_FAILURE, LOGIN_SUCCESS, LOGOUT_SUCCESS, REGISTER_FAILURE, REGISTER_SUCCESS, RESET_PASSWORD_CODE_FAILURE, RESET_PASSWORD_CODE_SUCCESS, RESET_PASSWORD_FAILURE, RESET_PASSWORD_SUCCESS, SHOW_LOADER } from \"../action-types/auth-action-types\";\nexport const loginSuccess = userRole => ({\n  type: LOGIN_SUCCESS,\n  payload: userRole\n});\nexport const loginFailure = error => ({\n  type: LOGIN_FAILURE,\n  payload: error\n});\nexport const showLoader = () => ({\n  type: SHOW_LOADER\n});\nexport const registerSuccess = () => ({\n  type: REGISTER_SUCCESS\n});\nexport const registerFailure = errors => ({\n  type: REGISTER_FAILURE,\n  payload: errors\n});\nexport const logoutSuccess = () => ({\n  type: LOGOUT_SUCCESS\n});\nexport const activateAccountSuccess = message => ({\n  type: ACTIVATE_ACCOUNT_SUCCESS,\n  payload: message\n});\nexport const activateAccountFailure = error => ({\n  type: ACTIVATE_ACCOUNT_FAILURE,\n  payload: error\n});\nexport const forgotPasswordSuccess = message => ({\n  type: FORGOT_PASSWORD_SUCCESS,\n  payload: message\n});\nexport const forgotPasswordFailure = error => ({\n  type: FORGOT_PASSWORD_FAILURE,\n  payload: error\n});\nexport const resetPasswordCodeSuccess = user => ({\n  type: RESET_PASSWORD_CODE_SUCCESS,\n  payload: user\n});\nexport const resetPasswordCodeFailure = error => ({\n  type: RESET_PASSWORD_CODE_FAILURE,\n  payload: error\n});\nexport const resetPasswordSuccess = message => ({\n  type: RESET_PASSWORD_SUCCESS,\n  payload: message\n});\nexport const resetPasswordFailure = errors => ({\n  type: RESET_PASSWORD_FAILURE,\n  payload: errors\n});","map":{"version":3,"sources":["C:/Users/HP/Desktop/project/ecommerce-spring-reactjs-master/frontend/src/redux/actions/auth-actions.ts"],"names":["ACTIVATE_ACCOUNT_FAILURE","ACTIVATE_ACCOUNT_SUCCESS","FORGOT_PASSWORD_FAILURE","FORGOT_PASSWORD_SUCCESS","LOGIN_FAILURE","LOGIN_SUCCESS","LOGOUT_SUCCESS","REGISTER_FAILURE","REGISTER_SUCCESS","RESET_PASSWORD_CODE_FAILURE","RESET_PASSWORD_CODE_SUCCESS","RESET_PASSWORD_FAILURE","RESET_PASSWORD_SUCCESS","SHOW_LOADER","loginSuccess","userRole","type","payload","loginFailure","error","showLoader","registerSuccess","registerFailure","errors","logoutSuccess","activateAccountSuccess","message","activateAccountFailure","forgotPasswordSuccess","forgotPasswordFailure","resetPasswordCodeSuccess","user","resetPasswordCodeFailure","resetPasswordSuccess","resetPasswordFailure"],"mappings":"AACA,SACIA,wBADJ,EAEIC,wBAFJ,EAGIC,uBAHJ,EAIIC,uBAJJ,EAKIC,aALJ,EAMIC,aANJ,EAOIC,cAPJ,EAQIC,gBARJ,EASIC,gBATJ,EAUIC,2BAVJ,EAWIC,2BAXJ,EAYIC,sBAZJ,EAaIC,sBAbJ,EAcIC,WAdJ,QA6BO,mCA7BP;AA+BA,OAAO,MAAMC,YAAY,GAAIC,QAAD,KAA+C;AACvEC,EAAAA,IAAI,EAAEX,aADiE;AAEvEY,EAAAA,OAAO,EAAEF;AAF8D,CAA/C,CAArB;AAKP,OAAO,MAAMG,YAAY,GAAIC,KAAD,KAA4C;AACpEH,EAAAA,IAAI,EAAEZ,aAD8D;AAEpEa,EAAAA,OAAO,EAAEE;AAF2D,CAA5C,CAArB;AAKP,OAAO,MAAMC,UAAU,GAAG,OAA6B;AACnDJ,EAAAA,IAAI,EAAEH;AAD6C,CAA7B,CAAnB;AAIP,OAAO,MAAMQ,eAAe,GAAG,OAAkC;AAC7DL,EAAAA,IAAI,EAAER;AADuD,CAAlC,CAAxB;AAIP,OAAO,MAAMc,eAAe,GAAIC,MAAD,KAAoD;AAC/EP,EAAAA,IAAI,EAAET,gBADyE;AAE/EU,EAAAA,OAAO,EAAEM;AAFsE,CAApD,CAAxB;AAKP,OAAO,MAAMC,aAAa,GAAG,OAAgC;AACzDR,EAAAA,IAAI,EAAEV;AADmD,CAAhC,CAAtB;AAIP,OAAO,MAAMmB,sBAAsB,GAAIC,OAAD,KAAwD;AAC1FV,EAAAA,IAAI,EAAEf,wBADoF;AAE1FgB,EAAAA,OAAO,EAAES;AAFiF,CAAxD,CAA/B;AAKP,OAAO,MAAMC,sBAAsB,GAAIR,KAAD,KAAsD;AACxFH,EAAAA,IAAI,EAAEhB,wBADkF;AAExFiB,EAAAA,OAAO,EAAEE;AAF+E,CAAtD,CAA/B;AAKP,OAAO,MAAMS,qBAAqB,GAAIF,OAAD,KAAuD;AACxFV,EAAAA,IAAI,EAAEb,uBADkF;AAExFc,EAAAA,OAAO,EAAES;AAF+E,CAAvD,CAA9B;AAKP,OAAO,MAAMG,qBAAqB,GAAIV,KAAD,KAAqD;AACtFH,EAAAA,IAAI,EAAEd,uBADgF;AAEtFe,EAAAA,OAAO,EAAEE;AAF6E,CAArD,CAA9B;AAKP,OAAO,MAAMW,wBAAwB,GAAIC,IAAD,KAAqD;AACzFf,EAAAA,IAAI,EAAEN,2BADmF;AAEzFO,EAAAA,OAAO,EAAEc;AAFgF,CAArD,CAAjC;AAKP,OAAO,MAAMC,wBAAwB,GAAIb,KAAD,KAAwD;AAC5FH,EAAAA,IAAI,EAAEP,2BADsF;AAE5FQ,EAAAA,OAAO,EAAEE;AAFmF,CAAxD,CAAjC;AAKP,OAAO,MAAMc,oBAAoB,GAAIP,OAAD,KAAsD;AACtFV,EAAAA,IAAI,EAAEJ,sBADgF;AAEtFK,EAAAA,OAAO,EAAES;AAF6E,CAAtD,CAA7B;AAKP,OAAO,MAAMQ,oBAAoB,GAAIX,MAAD,KAAyD;AACzFP,EAAAA,IAAI,EAAEL,sBADmF;AAEzFM,EAAAA,OAAO,EAAEM;AAFgF,CAAzD,CAA7B","sourcesContent":["import {AuthErrors, User} from \"../../types/types\";\nimport {\n    ACTIVATE_ACCOUNT_FAILURE,\n    ACTIVATE_ACCOUNT_SUCCESS,\n    FORGOT_PASSWORD_FAILURE,\n    FORGOT_PASSWORD_SUCCESS,\n    LOGIN_FAILURE,\n    LOGIN_SUCCESS,\n    LOGOUT_SUCCESS,\n    REGISTER_FAILURE,\n    REGISTER_SUCCESS,\n    RESET_PASSWORD_CODE_FAILURE,\n    RESET_PASSWORD_CODE_SUCCESS,\n    RESET_PASSWORD_FAILURE,\n    RESET_PASSWORD_SUCCESS,\n    SHOW_LOADER,\n    ActivateAccountFailureActionType,\n    ActivateAccountSuccessActionType,\n    ForgotPasswordFailureActionType,\n    ForgotPasswordSuccessActionType,\n    LoginFailureActionType,\n    LoginSuccessActionType,\n    LogoutSuccessActionType,\n    RegisterFailureActionType,\n    RegisterSuccessActionType,\n    ResetPasswordCodeFailureActionType,\n    ResetPasswordCodeSuccessActionType,\n    ResetPasswordFailureActionType,\n    ResetPasswordSuccessActionType,\n    ShowLoaderActionType\n} from \"../action-types/auth-action-types\";\n\nexport const loginSuccess = (userRole: string): LoginSuccessActionType => ({\n    type: LOGIN_SUCCESS,\n    payload: userRole\n});\n\nexport const loginFailure = (error: string): LoginFailureActionType => ({\n    type: LOGIN_FAILURE,\n    payload: error\n});\n\nexport const showLoader = (): ShowLoaderActionType => ({\n    type: SHOW_LOADER\n});\n\nexport const registerSuccess = (): RegisterSuccessActionType => ({\n    type: REGISTER_SUCCESS\n});\n\nexport const registerFailure = (errors: AuthErrors): RegisterFailureActionType => ({\n    type: REGISTER_FAILURE,\n    payload: errors\n});\n\nexport const logoutSuccess = (): LogoutSuccessActionType => ({\n    type: LOGOUT_SUCCESS\n});\n\nexport const activateAccountSuccess = (message: string): ActivateAccountSuccessActionType => ({\n    type: ACTIVATE_ACCOUNT_SUCCESS,\n    payload: message\n});\n\nexport const activateAccountFailure = (error: string): ActivateAccountFailureActionType => ({\n    type: ACTIVATE_ACCOUNT_FAILURE,\n    payload: error\n});\n\nexport const forgotPasswordSuccess = (message: string): ForgotPasswordSuccessActionType => ({\n    type: FORGOT_PASSWORD_SUCCESS,\n    payload: message\n});\n\nexport const forgotPasswordFailure = (error: string): ForgotPasswordFailureActionType => ({\n    type: FORGOT_PASSWORD_FAILURE,\n    payload: error\n});\n\nexport const resetPasswordCodeSuccess = (user: User): ResetPasswordCodeSuccessActionType => ({\n    type: RESET_PASSWORD_CODE_SUCCESS,\n    payload: user\n});\n\nexport const resetPasswordCodeFailure = (error: string): ResetPasswordCodeFailureActionType => ({\n    type: RESET_PASSWORD_CODE_FAILURE,\n    payload: error\n});\n\nexport const resetPasswordSuccess = (message: string): ResetPasswordSuccessActionType => ({\n    type: RESET_PASSWORD_SUCCESS,\n    payload: message\n});\n\nexport const resetPasswordFailure = (errors: AuthErrors): ResetPasswordFailureActionType => ({\n    type: RESET_PASSWORD_FAILURE,\n    payload: errors\n});\n\n"]},"metadata":{},"sourceType":"module"}