{"ast":null,"code":"import inspect from \"../../jsutils/inspect.mjs\";\nimport invariant from \"../../jsutils/invariant.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { DirectiveLocation } from \"../../language/directiveLocation.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\n\nexport function KnownDirectivesRule(context) {\n  var locationsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map(function (name) {\n        return name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: function Directive(node, _key, _parent, _path, ancestors) {\n      var name = node.name.value;\n      var locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(new GraphQLError(\"Unknown directive \\\"@\".concat(name, \"\\\".\"), node));\n        return;\n      }\n\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new GraphQLError(\"Directive \\\"@\".concat(name, \"\\\" may not be used on \").concat(candidateLocation, \".\"), node));\n      }\n    }\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n  !Array.isArray(appliedTo) || invariant(0);\n\n  switch (appliedTo.kind) {\n    case Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n\n    case Kind.FIELD:\n      return DirectiveLocation.FIELD;\n\n    case Kind.FRAGMENT_SPREAD:\n      return DirectiveLocation.FRAGMENT_SPREAD;\n\n    case Kind.INLINE_FRAGMENT:\n      return DirectiveLocation.INLINE_FRAGMENT;\n\n    case Kind.FRAGMENT_DEFINITION:\n      return DirectiveLocation.FRAGMENT_DEFINITION;\n\n    case Kind.VARIABLE_DEFINITION:\n      return DirectiveLocation.VARIABLE_DEFINITION;\n\n    case Kind.SCHEMA_DEFINITION:\n    case Kind.SCHEMA_EXTENSION:\n      return DirectiveLocation.SCHEMA;\n\n    case Kind.SCALAR_TYPE_DEFINITION:\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return DirectiveLocation.SCALAR;\n\n    case Kind.OBJECT_TYPE_DEFINITION:\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.OBJECT;\n\n    case Kind.FIELD_DEFINITION:\n      return DirectiveLocation.FIELD_DEFINITION;\n\n    case Kind.INTERFACE_TYPE_DEFINITION:\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return DirectiveLocation.INTERFACE;\n\n    case Kind.UNION_TYPE_DEFINITION:\n    case Kind.UNION_TYPE_EXTENSION:\n      return DirectiveLocation.UNION;\n\n    case Kind.ENUM_TYPE_DEFINITION:\n    case Kind.ENUM_TYPE_EXTENSION:\n      return DirectiveLocation.ENUM;\n\n    case Kind.ENUM_VALUE_DEFINITION:\n      return DirectiveLocation.ENUM_VALUE;\n\n    case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.INPUT_OBJECT;\n\n    case Kind.INPUT_VALUE_DEFINITION:\n      {\n        var parentNode = ancestors[ancestors.length - 3];\n        return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? DirectiveLocation.INPUT_FIELD_DEFINITION : DirectiveLocation.ARGUMENT_DEFINITION;\n      }\n  }\n}\n\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case 'query':\n      return DirectiveLocation.QUERY;\n\n    case 'mutation':\n      return DirectiveLocation.MUTATION;\n\n    case 'subscription':\n      return DirectiveLocation.SUBSCRIPTION;\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n  false || invariant(0, 'Unexpected operation: ' + inspect(operation));\n}","map":{"version":3,"sources":["C:/Users/HP/Desktop/project/ecommerce-spring-reactjs-master/frontend/node_modules/graphql/validation/rules/KnownDirectivesRule.mjs"],"names":["inspect","invariant","GraphQLError","Kind","DirectiveLocation","specifiedDirectives","KnownDirectivesRule","context","locationsMap","Object","create","schema","getSchema","definedDirectives","getDirectives","_i2","length","directive","name","locations","astDefinitions","getDocument","definitions","_i4","def","kind","DIRECTIVE_DEFINITION","value","map","Directive","node","_key","_parent","_path","ancestors","reportError","concat","candidateLocation","getDirectiveLocationForASTPath","indexOf","appliedTo","Array","isArray","OPERATION_DEFINITION","getDirectiveLocationForOperation","operation","FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE_DEFINITION","SCHEMA_DEFINITION","SCHEMA_EXTENSION","SCHEMA","SCALAR_TYPE_DEFINITION","SCALAR_TYPE_EXTENSION","SCALAR","OBJECT_TYPE_DEFINITION","OBJECT_TYPE_EXTENSION","OBJECT","FIELD_DEFINITION","INTERFACE_TYPE_DEFINITION","INTERFACE_TYPE_EXTENSION","INTERFACE","UNION_TYPE_DEFINITION","UNION_TYPE_EXTENSION","UNION","ENUM_TYPE_DEFINITION","ENUM_TYPE_EXTENSION","ENUM","ENUM_VALUE_DEFINITION","ENUM_VALUE","INPUT_OBJECT_TYPE_DEFINITION","INPUT_OBJECT_TYPE_EXTENSION","INPUT_OBJECT","INPUT_VALUE_DEFINITION","parentNode","INPUT_FIELD_DEFINITION","ARGUMENT_DEFINITION","QUERY","MUTATION","SUBSCRIPTION"],"mappings":"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","sourcesContent":["import inspect from \"../../jsutils/inspect.mjs\";\nimport invariant from \"../../jsutils/invariant.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { DirectiveLocation } from \"../../language/directiveLocation.mjs\";\nimport { specifiedDirectives } from \"../../type/directives.mjs\";\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\nexport function KnownDirectivesRule(context) {\n  var locationsMap = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n\n  for (var _i2 = 0; _i2 < definedDirectives.length; _i2++) {\n    var directive = definedDirectives[_i2];\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n\n  for (var _i4 = 0; _i4 < astDefinitions.length; _i4++) {\n    var def = astDefinitions[_i4];\n\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map(function (name) {\n        return name.value;\n      });\n    }\n  }\n\n  return {\n    Directive: function Directive(node, _key, _parent, _path, ancestors) {\n      var name = node.name.value;\n      var locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(new GraphQLError(\"Unknown directive \\\"@\".concat(name, \"\\\".\"), node));\n        return;\n      }\n\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new GraphQLError(\"Directive \\\"@\".concat(name, \"\\\" may not be used on \").concat(candidateLocation, \".\"), node));\n      }\n    }\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n  !Array.isArray(appliedTo) || invariant(0);\n\n  switch (appliedTo.kind) {\n    case Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n\n    case Kind.FIELD:\n      return DirectiveLocation.FIELD;\n\n    case Kind.FRAGMENT_SPREAD:\n      return DirectiveLocation.FRAGMENT_SPREAD;\n\n    case Kind.INLINE_FRAGMENT:\n      return DirectiveLocation.INLINE_FRAGMENT;\n\n    case Kind.FRAGMENT_DEFINITION:\n      return DirectiveLocation.FRAGMENT_DEFINITION;\n\n    case Kind.VARIABLE_DEFINITION:\n      return DirectiveLocation.VARIABLE_DEFINITION;\n\n    case Kind.SCHEMA_DEFINITION:\n    case Kind.SCHEMA_EXTENSION:\n      return DirectiveLocation.SCHEMA;\n\n    case Kind.SCALAR_TYPE_DEFINITION:\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return DirectiveLocation.SCALAR;\n\n    case Kind.OBJECT_TYPE_DEFINITION:\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.OBJECT;\n\n    case Kind.FIELD_DEFINITION:\n      return DirectiveLocation.FIELD_DEFINITION;\n\n    case Kind.INTERFACE_TYPE_DEFINITION:\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return DirectiveLocation.INTERFACE;\n\n    case Kind.UNION_TYPE_DEFINITION:\n    case Kind.UNION_TYPE_EXTENSION:\n      return DirectiveLocation.UNION;\n\n    case Kind.ENUM_TYPE_DEFINITION:\n    case Kind.ENUM_TYPE_EXTENSION:\n      return DirectiveLocation.ENUM;\n\n    case Kind.ENUM_VALUE_DEFINITION:\n      return DirectiveLocation.ENUM_VALUE;\n\n    case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.INPUT_OBJECT;\n\n    case Kind.INPUT_VALUE_DEFINITION:\n      {\n        var parentNode = ancestors[ancestors.length - 3];\n        return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? DirectiveLocation.INPUT_FIELD_DEFINITION : DirectiveLocation.ARGUMENT_DEFINITION;\n      }\n  }\n}\n\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case 'query':\n      return DirectiveLocation.QUERY;\n\n    case 'mutation':\n      return DirectiveLocation.MUTATION;\n\n    case 'subscription':\n      return DirectiveLocation.SUBSCRIPTION;\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n  false || invariant(0, 'Unexpected operation: ' + inspect(operation));\n}\n"]},"metadata":{},"sourceType":"module"}