{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\project\\\\ecommerce-spring-reactjs-master\\\\frontend\\\\src\\\\pages\\\\HomePage\\\\HomePage.tsx\";\nimport React, { useEffect } from 'react';\nimport HomePageTheme from \"../../component/HomePageTheme/HomePageTheme\";\nimport CarouselImageSlider from \"../../component/CarouselImageSlider/CarouselImageSlider\";\nimport SliderBrands from \"../../component/SliderBrands/SliderBrands\";\nimport SliderCards from \"../../component/PerfumeCardsSlider/PerfumeCardsSlider\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchCart } from \"../../redux/thunks/cart-thunks\";\nimport ScrollButton from \"../../component/ScrollButton/ScrollButton\";\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const perfumesFromLocalStorage = new Map(JSON.parse(localStorage.getItem(\"perfumes\")));\n    dispatch(fetchCart(Array.from(perfumesFromLocalStorage.keys())));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ScrollButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CarouselImageSlider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SliderBrands, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(HomePageTheme, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SliderCards, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/HP/Desktop/project/ecommerce-spring-reactjs-master/frontend/src/pages/HomePage/HomePage.tsx"],"names":["React","useEffect","HomePageTheme","CarouselImageSlider","SliderBrands","SliderCards","useDispatch","fetchCart","ScrollButton","HomePage","dispatch","perfumesFromLocalStorage","Map","JSON","parse","localStorage","getItem","Array","from","keys"],"mappings":";AAAA,OAAOA,KAAP,IAAmBC,SAAnB,QAAmC,OAAnC;AAEA,OAAOC,aAAP,MAA0B,6CAA1B;AACA,OAAOC,mBAAP,MAAgC,yDAAhC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,WAAP,MAAwB,uDAAxB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,SAAR,QAAwB,gCAAxB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAEA,MAAMC,QAAY,GAAG,MAAM;AACvB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,wBAA6C,GAAG,IAAIC,GAAJ,CAAQC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAR,CAAtD;AACAN,IAAAA,QAAQ,CAACH,SAAS,CAACU,KAAK,CAACC,IAAN,CAAWP,wBAAwB,CAACQ,IAAzB,EAAX,CAAD,CAAV,CAAR;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AASH,CAjBD;;AAmBA,eAAeV,QAAf","sourcesContent":["import React, {FC, useEffect} from 'react';\n\nimport HomePageTheme from \"../../component/HomePageTheme/HomePageTheme\";\nimport CarouselImageSlider from \"../../component/CarouselImageSlider/CarouselImageSlider\";\nimport SliderBrands from \"../../component/SliderBrands/SliderBrands\";\nimport SliderCards from \"../../component/PerfumeCardsSlider/PerfumeCardsSlider\";\nimport {useDispatch} from \"react-redux\";\nimport {fetchCart} from \"../../redux/thunks/cart-thunks\";\nimport ScrollButton from \"../../component/ScrollButton/ScrollButton\";\n\nconst HomePage: FC = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const perfumesFromLocalStorage: Map<number, number> = new Map(JSON.parse(localStorage.getItem(\"perfumes\") as string));\n        dispatch(fetchCart(Array.from(perfumesFromLocalStorage.keys())))\n    }, []);\n\n    return (\n        <div>\n            <ScrollButton/>\n            <CarouselImageSlider/>\n            <SliderBrands/>\n            <HomePageTheme/>\n            <SliderCards/>\n        </div>\n    );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}