{"ast":null,"code":"import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n */\n\nexport function UniqueArgumentNamesRule(context) {\n  var knownArgNames = Object.create(null);\n  return {\n    Field: function Field() {\n      knownArgNames = Object.create(null);\n    },\n    Directive: function Directive() {\n      knownArgNames = Object.create(null);\n    },\n    Argument: function Argument(node) {\n      var argName = node.name.value;\n\n      if (knownArgNames[argName]) {\n        context.reportError(new GraphQLError(\"There can be only one argument named \\\"\".concat(argName, \"\\\".\"), [knownArgNames[argName], node.name]));\n      } else {\n        knownArgNames[argName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/HP/Desktop/project/ecommerce-spring-reactjs-master/frontend/node_modules/graphql/validation/rules/UniqueArgumentNamesRule.mjs"],"names":["GraphQLError","UniqueArgumentNamesRule","context","knownArgNames","Object","create","Field","Directive","Argument","node","argName","name","value","reportError","concat"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,uBAAT,CAAiCC,OAAjC,EAA0C;AAC/C,MAAIC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAApB;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtBH,MAAAA,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAhB;AACD,KAHI;AAILE,IAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC9BJ,MAAAA,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAhB;AACD,KANI;AAOLG,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AAChC,UAAIC,OAAO,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAAxB;;AAEA,UAAIT,aAAa,CAACO,OAAD,CAAjB,EAA4B;AAC1BR,QAAAA,OAAO,CAACW,WAAR,CAAoB,IAAIb,YAAJ,CAAiB,0CAA0Cc,MAA1C,CAAiDJ,OAAjD,EAA0D,KAA1D,CAAjB,EAAmF,CAACP,aAAa,CAACO,OAAD,CAAd,EAAyBD,IAAI,CAACE,IAA9B,CAAnF,CAApB;AACD,OAFD,MAEO;AACLR,QAAAA,aAAa,CAACO,OAAD,CAAb,GAAyBD,IAAI,CAACE,IAA9B;AACD;;AAED,aAAO,KAAP;AACD;AAjBI,GAAP;AAmBD","sourcesContent":["import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n */\nexport function UniqueArgumentNamesRule(context) {\n  var knownArgNames = Object.create(null);\n  return {\n    Field: function Field() {\n      knownArgNames = Object.create(null);\n    },\n    Directive: function Directive() {\n      knownArgNames = Object.create(null);\n    },\n    Argument: function Argument(node) {\n      var argName = node.name.value;\n\n      if (knownArgNames[argName]) {\n        context.reportError(new GraphQLError(\"There can be only one argument named \\\"\".concat(argName, \"\\\".\"), [knownArgNames[argName], node.name]));\n      } else {\n        knownArgNames[argName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}