{"ast":null,"code":"import { GraphQLError } from \"../error/GraphQLError.mjs\";\n/**\n * Extracts the root type of the operation from the schema.\n */\n\nexport function getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    var queryType = schema.getQueryType();\n\n    if (!queryType) {\n      throw new GraphQLError('Schema does not define the required query root type.', operation);\n    }\n\n    return queryType;\n  }\n\n  if (operation.operation === 'mutation') {\n    var mutationType = schema.getMutationType();\n\n    if (!mutationType) {\n      throw new GraphQLError('Schema is not configured for mutations.', operation);\n    }\n\n    return mutationType;\n  }\n\n  if (operation.operation === 'subscription') {\n    var subscriptionType = schema.getSubscriptionType();\n\n    if (!subscriptionType) {\n      throw new GraphQLError('Schema is not configured for subscriptions.', operation);\n    }\n\n    return subscriptionType;\n  }\n\n  throw new GraphQLError('Can only have query, mutation and subscription operations.', operation);\n}","map":{"version":3,"sources":["C:/Users/HP/Desktop/project/ecommerce-spring-reactjs-master/frontend/node_modules/graphql/utilities/getOperationRootType.mjs"],"names":["GraphQLError","getOperationRootType","schema","operation","queryType","getQueryType","mutationType","getMutationType","subscriptionType","getSubscriptionType"],"mappings":"AAAA,SAASA,YAAT,QAA6B,2BAA7B;AAEA;AACA;AACA;;AACA,OAAO,SAASC,oBAAT,CAA8BC,MAA9B,EAAsCC,SAAtC,EAAiD;AACtD,MAAIA,SAAS,CAACA,SAAV,KAAwB,OAA5B,EAAqC;AACnC,QAAIC,SAAS,GAAGF,MAAM,CAACG,YAAP,EAAhB;;AAEA,QAAI,CAACD,SAAL,EAAgB;AACd,YAAM,IAAIJ,YAAJ,CAAiB,sDAAjB,EAAyEG,SAAzE,CAAN;AACD;;AAED,WAAOC,SAAP;AACD;;AAED,MAAID,SAAS,CAACA,SAAV,KAAwB,UAA5B,EAAwC;AACtC,QAAIG,YAAY,GAAGJ,MAAM,CAACK,eAAP,EAAnB;;AAEA,QAAI,CAACD,YAAL,EAAmB;AACjB,YAAM,IAAIN,YAAJ,CAAiB,yCAAjB,EAA4DG,SAA5D,CAAN;AACD;;AAED,WAAOG,YAAP;AACD;;AAED,MAAIH,SAAS,CAACA,SAAV,KAAwB,cAA5B,EAA4C;AAC1C,QAAIK,gBAAgB,GAAGN,MAAM,CAACO,mBAAP,EAAvB;;AAEA,QAAI,CAACD,gBAAL,EAAuB;AACrB,YAAM,IAAIR,YAAJ,CAAiB,6CAAjB,EAAgEG,SAAhE,CAAN;AACD;;AAED,WAAOK,gBAAP;AACD;;AAED,QAAM,IAAIR,YAAJ,CAAiB,4DAAjB,EAA+EG,SAA/E,CAAN;AACD","sourcesContent":["import { GraphQLError } from \"../error/GraphQLError.mjs\";\n\n/**\n * Extracts the root type of the operation from the schema.\n */\nexport function getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    var queryType = schema.getQueryType();\n\n    if (!queryType) {\n      throw new GraphQLError('Schema does not define the required query root type.', operation);\n    }\n\n    return queryType;\n  }\n\n  if (operation.operation === 'mutation') {\n    var mutationType = schema.getMutationType();\n\n    if (!mutationType) {\n      throw new GraphQLError('Schema is not configured for mutations.', operation);\n    }\n\n    return mutationType;\n  }\n\n  if (operation.operation === 'subscription') {\n    var subscriptionType = schema.getSubscriptionType();\n\n    if (!subscriptionType) {\n      throw new GraphQLError('Schema is not configured for subscriptions.', operation);\n    }\n\n    return subscriptionType;\n  }\n\n  throw new GraphQLError('Can only have query, mutation and subscription operations.', operation);\n}\n"]},"metadata":{},"sourceType":"module"}