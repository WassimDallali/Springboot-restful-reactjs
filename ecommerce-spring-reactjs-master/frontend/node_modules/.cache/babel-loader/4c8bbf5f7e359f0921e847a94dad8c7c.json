{"ast":null,"code":"import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n */\n\nexport function UniqueFragmentNamesRule(context) {\n  var knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(new GraphQLError(\"There can be only one fragment named \\\"\".concat(fragmentName, \"\\\".\"), [knownFragmentNames[fragmentName], node.name]));\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/HP/Desktop/project/ecommerce-spring-reactjs-master/frontend/node_modules/graphql/validation/rules/UniqueFragmentNamesRule.mjs"],"names":["GraphQLError","UniqueFragmentNamesRule","context","knownFragmentNames","Object","create","OperationDefinition","FragmentDefinition","node","fragmentName","name","value","reportError","concat"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,uBAAT,CAAiCC,OAAjC,EAA0C;AAC/C,MAAIC,kBAAkB,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAzB;AACA,SAAO;AACLC,IAAAA,mBAAmB,EAAE,SAASA,mBAAT,GAA+B;AAClD,aAAO,KAAP;AACD,KAHI;AAILC,IAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BC,IAA5B,EAAkC;AACpD,UAAIC,YAAY,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAA7B;;AAEA,UAAIR,kBAAkB,CAACM,YAAD,CAAtB,EAAsC;AACpCP,QAAAA,OAAO,CAACU,WAAR,CAAoB,IAAIZ,YAAJ,CAAiB,0CAA0Ca,MAA1C,CAAiDJ,YAAjD,EAA+D,KAA/D,CAAjB,EAAwF,CAACN,kBAAkB,CAACM,YAAD,CAAnB,EAAmCD,IAAI,CAACE,IAAxC,CAAxF,CAApB;AACD,OAFD,MAEO;AACLP,QAAAA,kBAAkB,CAACM,YAAD,CAAlB,GAAmCD,IAAI,CAACE,IAAxC;AACD;;AAED,aAAO,KAAP;AACD;AAdI,GAAP;AAgBD","sourcesContent":["import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n */\nexport function UniqueFragmentNamesRule(context) {\n  var knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(new GraphQLError(\"There can be only one fragment named \\\"\".concat(fragmentName, \"\\\".\"), [knownFragmentNames[fragmentName], node.name]));\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}