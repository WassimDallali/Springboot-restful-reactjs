{"ast":null,"code":"import { FETCH_ALL_USERS_ORDERS_SUCCESS, FETCH_ALL_USERS_SUCCESS, FETCH_USER_INFO_SUCCESS, FETCH_USER_ORDERS_SUCCESS, FORM_RESET, PERFUME_ADDED_FAILURE, PERFUME_ADDED_SUCCESS, PERFUME_UPDATED_FAILURE, PERFUME_UPDATED_SUCCESS, FETCH_ALL_USERS_BY_QUERY_SUCCESS, FETCH_ALL_USERS_ORDERS_BY_QUERY_SUCCESS, FETCH_USER_INFO_BY_QUERY_SUCCESS, FETCH_USER_ORDERS_BY_QUERY_SUCCESS, LOADING_DATA } from \"../action-types/admin-action-types\";\nexport const loadingData = () => ({\n  type: LOADING_DATA\n});\nexport const addPerfumeSuccess = () => ({\n  type: PERFUME_ADDED_SUCCESS\n});\nexport const addPerfumeFailure = error => ({\n  type: PERFUME_ADDED_FAILURE,\n  payload: error\n});\nexport const updatePerfumeSuccess = () => ({\n  type: PERFUME_UPDATED_SUCCESS\n});\nexport const updatePerfumeFailure = error => ({\n  type: PERFUME_UPDATED_FAILURE,\n  payload: error\n});\nexport const getAllUsersOrders = orders => ({\n  type: FETCH_ALL_USERS_ORDERS_SUCCESS,\n  payload: orders\n});\nexport const getUserOrders = orders => ({\n  type: FETCH_USER_ORDERS_SUCCESS,\n  payload: orders\n});\nexport const getAllUsers = users => ({\n  type: FETCH_ALL_USERS_SUCCESS,\n  payload: users\n});\nexport const getUserInfo = user => ({\n  type: FETCH_USER_INFO_SUCCESS,\n  payload: user\n});\nexport const reset = () => ({\n  type: FORM_RESET\n});\nexport const getUserInfoByQuery = user => ({\n  type: FETCH_USER_INFO_BY_QUERY_SUCCESS,\n  payload: user\n});\nexport const getAllUsersByQuery = users => ({\n  type: FETCH_ALL_USERS_BY_QUERY_SUCCESS,\n  payload: users\n});\nexport const getAllUsersOrdersByQuery = orders => ({\n  type: FETCH_ALL_USERS_ORDERS_BY_QUERY_SUCCESS,\n  payload: orders\n});\nexport const getUserOrdersByQuery = orders => ({\n  type: FETCH_USER_ORDERS_BY_QUERY_SUCCESS,\n  payload: orders\n});","map":{"version":3,"sources":["C:/Users/HP/Desktop/project/ecommerce-spring-reactjs-master/frontend/src/redux/actions/admin-actions.ts"],"names":["FETCH_ALL_USERS_ORDERS_SUCCESS","FETCH_ALL_USERS_SUCCESS","FETCH_USER_INFO_SUCCESS","FETCH_USER_ORDERS_SUCCESS","FORM_RESET","PERFUME_ADDED_FAILURE","PERFUME_ADDED_SUCCESS","PERFUME_UPDATED_FAILURE","PERFUME_UPDATED_SUCCESS","FETCH_ALL_USERS_BY_QUERY_SUCCESS","FETCH_ALL_USERS_ORDERS_BY_QUERY_SUCCESS","FETCH_USER_INFO_BY_QUERY_SUCCESS","FETCH_USER_ORDERS_BY_QUERY_SUCCESS","LOADING_DATA","loadingData","type","addPerfumeSuccess","addPerfumeFailure","error","payload","updatePerfumeSuccess","updatePerfumeFailure","getAllUsersOrders","orders","getUserOrders","getAllUsers","users","getUserInfo","user","reset","getUserInfoByQuery","getAllUsersByQuery","getAllUsersOrdersByQuery","getUserOrdersByQuery"],"mappings":"AACA,SACIA,8BADJ,EAEIC,uBAFJ,EAGIC,uBAHJ,EAIIC,yBAJJ,EAKIC,UALJ,EAMIC,qBANJ,EAOIC,qBAPJ,EAQIC,uBARJ,EASIC,uBATJ,EAUIC,gCAVJ,EAWIC,uCAXJ,EAYIC,gCAZJ,EAaIC,kCAbJ,EAcIC,YAdJ,QA6BO,oCA7BP;AA+BA,OAAO,MAAMC,WAAW,GAAG,OAA8B;AACrDC,EAAAA,IAAI,EAAEF;AAD+C,CAA9B,CAApB;AAIP,OAAO,MAAMG,iBAAiB,GAAG,OAAoC;AACjED,EAAAA,IAAI,EAAET;AAD2D,CAApC,CAA1B;AAIP,OAAO,MAAMW,iBAAiB,GAAIC,KAAD,KAAwD;AACrFH,EAAAA,IAAI,EAAEV,qBAD+E;AAErFc,EAAAA,OAAO,EAAED;AAF4E,CAAxD,CAA1B;AAKP,OAAO,MAAME,oBAAoB,GAAG,OAAuC;AACvEL,EAAAA,IAAI,EAAEP;AADiE,CAAvC,CAA7B;AAIP,OAAO,MAAMa,oBAAoB,GAAIH,KAAD,KAA2D;AAC3FH,EAAAA,IAAI,EAAER,uBADqF;AAE3FY,EAAAA,OAAO,EAAED;AAFkF,CAA3D,CAA7B;AAKP,OAAO,MAAMI,iBAAiB,GAAIC,MAAD,KAAwD;AACrFR,EAAAA,IAAI,EAAEf,8BAD+E;AAErFmB,EAAAA,OAAO,EAAEI;AAF4E,CAAxD,CAA1B;AAKP,OAAO,MAAMC,aAAa,GAAID,MAAD,KAAoD;AAC7ER,EAAAA,IAAI,EAAEZ,yBADuE;AAE7EgB,EAAAA,OAAO,EAAEI;AAFoE,CAApD,CAAtB;AAKP,OAAO,MAAME,WAAW,GAAIC,KAAD,KAAgD;AACvEX,EAAAA,IAAI,EAAEd,uBADiE;AAEvEkB,EAAAA,OAAO,EAAEO;AAF8D,CAAhD,CAApB;AAKP,OAAO,MAAMC,WAAW,GAAIC,IAAD,KAAwC;AAC/Db,EAAAA,IAAI,EAAEb,uBADyD;AAE/DiB,EAAAA,OAAO,EAAES;AAFsD,CAAxC,CAApB;AAKP,OAAO,MAAMC,KAAK,GAAG,OAAwB;AACzCd,EAAAA,IAAI,EAAEX;AADmC,CAAxB,CAAd;AAIP,OAAO,MAAM0B,kBAAkB,GAAIF,IAAD,KAA+C;AAC7Eb,EAAAA,IAAI,EAAEJ,gCADuE;AAE7EQ,EAAAA,OAAO,EAAES;AAFoE,CAA/C,CAA3B;AAKP,OAAO,MAAMG,kBAAkB,GAAIL,KAAD,KAAuD;AACrFX,EAAAA,IAAI,EAAEN,gCAD+E;AAErFU,EAAAA,OAAO,EAAEO;AAF4E,CAAvD,CAA3B;AAKP,OAAO,MAAMM,wBAAwB,GAAIT,MAAD,KAA+D;AACnGR,EAAAA,IAAI,EAAEL,uCAD6F;AAEnGS,EAAAA,OAAO,EAAEI;AAF0F,CAA/D,CAAjC;AAKP,OAAO,MAAMU,oBAAoB,GAAIV,MAAD,KAA2D;AAC3FR,EAAAA,IAAI,EAAEH,kCADqF;AAE3FO,EAAAA,OAAO,EAAEI;AAFkF,CAA3D,CAA7B","sourcesContent":["import {Order, PerfumeErrors, User} from \"../../types/types\";\nimport {\n    FETCH_ALL_USERS_ORDERS_SUCCESS,\n    FETCH_ALL_USERS_SUCCESS,\n    FETCH_USER_INFO_SUCCESS,\n    FETCH_USER_ORDERS_SUCCESS,\n    FORM_RESET,\n    PERFUME_ADDED_FAILURE,\n    PERFUME_ADDED_SUCCESS,\n    PERFUME_UPDATED_FAILURE,\n    PERFUME_UPDATED_SUCCESS,\n    FETCH_ALL_USERS_BY_QUERY_SUCCESS,\n    FETCH_ALL_USERS_ORDERS_BY_QUERY_SUCCESS,\n    FETCH_USER_INFO_BY_QUERY_SUCCESS,\n    FETCH_USER_ORDERS_BY_QUERY_SUCCESS,\n    LOADING_DATA,\n    GetAllUsersActionType,\n    GetAllUsersOrdersActionType,\n    GetUserInfoActionType,\n    GetUserOrdersActionType,\n    ResetActionType,\n    UpdatePerfumeFailureActionType,\n    UpdatePerfumeSuccessActionType,\n    AddPerfumeFailureActionType,\n    AddPerfumeSuccessActionType,\n    GetAllUsersByQueryActionType,\n    GetAllUsersOrdersByQueryActionType,\n    GetUserOrdersByQueryActionType,\n    GetUserInfoByQueryActionType,\n    LoadingDataActionType\n} from \"../action-types/admin-action-types\";\n\nexport const loadingData = (): LoadingDataActionType => ({\n    type: LOADING_DATA\n});\n\nexport const addPerfumeSuccess = (): AddPerfumeSuccessActionType => ({\n    type: PERFUME_ADDED_SUCCESS\n});\n\nexport const addPerfumeFailure = (error: PerfumeErrors): AddPerfumeFailureActionType => ({\n    type: PERFUME_ADDED_FAILURE,\n    payload: error\n});\n\nexport const updatePerfumeSuccess = (): UpdatePerfumeSuccessActionType => ({\n    type: PERFUME_UPDATED_SUCCESS\n});\n\nexport const updatePerfumeFailure = (error: PerfumeErrors): UpdatePerfumeFailureActionType => ({\n    type: PERFUME_UPDATED_FAILURE,\n    payload: error\n});\n\nexport const getAllUsersOrders = (orders: Array<Order>): GetAllUsersOrdersActionType => ({\n    type: FETCH_ALL_USERS_ORDERS_SUCCESS,\n    payload: orders\n});\n\nexport const getUserOrders = (orders: Array<Order>): GetUserOrdersActionType => ({\n    type: FETCH_USER_ORDERS_SUCCESS,\n    payload: orders\n});\n\nexport const getAllUsers = (users: Array<User>): GetAllUsersActionType => ({\n    type: FETCH_ALL_USERS_SUCCESS,\n    payload: users\n});\n\nexport const getUserInfo = (user: User): GetUserInfoActionType => ({\n    type: FETCH_USER_INFO_SUCCESS,\n    payload: user\n});\n\nexport const reset = (): ResetActionType => ({\n    type: FORM_RESET\n});\n\nexport const getUserInfoByQuery = (user: User): GetUserInfoByQueryActionType => ({\n    type: FETCH_USER_INFO_BY_QUERY_SUCCESS,\n    payload: user\n});\n\nexport const getAllUsersByQuery = (users: Array<User>): GetAllUsersByQueryActionType => ({\n    type: FETCH_ALL_USERS_BY_QUERY_SUCCESS,\n    payload: users\n});\n\nexport const getAllUsersOrdersByQuery = (orders: Array<Order>): GetAllUsersOrdersByQueryActionType => ({\n    type: FETCH_ALL_USERS_ORDERS_BY_QUERY_SUCCESS,\n    payload: orders\n});\n\nexport const getUserOrdersByQuery = (orders: Array<Order>): GetUserOrdersByQueryActionType => ({\n    type: FETCH_USER_ORDERS_BY_QUERY_SUCCESS,\n    payload: orders\n});\n"]},"metadata":{},"sourceType":"module"}