{"ast":null,"code":"import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n/**\n * Subscriptions must only include one field.\n *\n * A GraphQL subscription is valid only if it contains a single root field.\n */\n\nexport function SingleFieldSubscriptionsRule(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new GraphQLError(node.name ? \"Subscription \\\"\".concat(node.name.value, \"\\\" must select only one top level field.\") : 'Anonymous Subscription must select only one top level field.', node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/HP/Desktop/project/ecommerce-spring-reactjs-master/frontend/node_modules/graphql/validation/rules/SingleFieldSubscriptionsRule.mjs"],"names":["GraphQLError","SingleFieldSubscriptionsRule","context","OperationDefinition","node","operation","selectionSet","selections","length","reportError","name","concat","value","slice"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,4BAAT,CAAsCC,OAAtC,EAA+C;AACpD,SAAO;AACLC,IAAAA,mBAAmB,EAAE,SAASA,mBAAT,CAA6BC,IAA7B,EAAmC;AACtD,UAAIA,IAAI,CAACC,SAAL,KAAmB,cAAvB,EAAuC;AACrC,YAAID,IAAI,CAACE,YAAL,CAAkBC,UAAlB,CAA6BC,MAA7B,KAAwC,CAA5C,EAA+C;AAC7CN,UAAAA,OAAO,CAACO,WAAR,CAAoB,IAAIT,YAAJ,CAAiBI,IAAI,CAACM,IAAL,GAAY,kBAAkBC,MAAlB,CAAyBP,IAAI,CAACM,IAAL,CAAUE,KAAnC,EAA0C,0CAA1C,CAAZ,GAAoG,8DAArH,EAAqLR,IAAI,CAACE,YAAL,CAAkBC,UAAlB,CAA6BM,KAA7B,CAAmC,CAAnC,CAArL,CAApB;AACD;AACF;AACF;AAPI,GAAP;AASD","sourcesContent":["import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Subscriptions must only include one field.\n *\n * A GraphQL subscription is valid only if it contains a single root field.\n */\nexport function SingleFieldSubscriptionsRule(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new GraphQLError(node.name ? \"Subscription \\\"\".concat(node.name.value, \"\\\" must select only one top level field.\") : 'Anonymous Subscription must select only one top level field.', node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}