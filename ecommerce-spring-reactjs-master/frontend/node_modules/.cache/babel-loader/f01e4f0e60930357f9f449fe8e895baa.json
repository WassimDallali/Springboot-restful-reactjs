{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\project\\\\ecommerce-spring-reactjs-master\\\\frontend\\\\src\\\\pages\\\\Account\\\\ChangePassword\\\\ChangePassword.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { faLock, faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { resetForm, updateUserPassword } from \"../../../redux/thunks/user-thunks\";\nimport \"./ChangePassword.css\";\n\nconst ChangePassword = () => {\n  const dispatch = useDispatch();\n  const errors = useSelector(state => state.user.userResetPasswordErrors);\n  const success = useSelector(state => state.user.successMessage);\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const {\n    passwordError,\n    password2Error\n  } = errors;\n  useEffect(() => {\n    dispatch(resetForm());\n  }, []);\n  useEffect(() => {\n    setPassword(\"\");\n    setPassword2(\"\");\n  }, [success]);\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    const data = {\n      email: \"\",\n      password,\n      password2\n    };\n    dispatch(updateUserPassword(data));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"password_reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"mr-2\",\n    icon: faLock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), \" Change Password\"), success ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-success col-6\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }\n  }, success) : null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"mt-5\",\n    onSubmit: onFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-sm-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Enter a new password: \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: passwordError ? \"form-control is-invalid\" : \"form-control\",\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, passwordError))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-sm-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Confirm password: \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password2\",\n    className: password2Error ? \"form-control is-invalid\" : \"form-control\",\n    value: password2,\n    onChange: event => setPassword2(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, password2Error))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"mr-3\",\n    icon: faUndo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), \"Change\")));\n};\n\nexport default ChangePassword;","map":{"version":3,"sources":["C:/Users/HP/Desktop/project/ecommerce-spring-reactjs-master/frontend/src/pages/Account/ChangePassword/ChangePassword.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","faLock","faUndo","FontAwesomeIcon","resetForm","updateUserPassword","ChangePassword","dispatch","errors","state","user","userResetPasswordErrors","success","successMessage","password","setPassword","password2","setPassword2","passwordError","password2Error","onFormSubmit","event","preventDefault","data","email","target","value"],"mappings":"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","sourcesContent":["import React, {FC, FormEvent, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {faLock, faUndo} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nimport {AuthErrors, UserResetPasswordData} from \"../../../types/types\";\nimport {AppStateType} from \"../../../redux/reducers/root-reducer\";\nimport {resetForm, updateUserPassword} from \"../../../redux/thunks/user-thunks\";\nimport \"./ChangePassword.css\";\n\nconst ChangePassword: FC = () => {\n    const dispatch = useDispatch();\n    const errors: Partial<AuthErrors> = useSelector((state: AppStateType) => state.user.userResetPasswordErrors);\n    const success: string = useSelector((state: AppStateType) => state.user.successMessage);\n    const [password, setPassword] = useState<string>(\"\");\n    const [password2, setPassword2] = useState<string>(\"\");\n    const {passwordError, password2Error} = errors;\n\n    useEffect(() => {\n        dispatch(resetForm());\n    }, []);\n\n    useEffect(() => {\n        setPassword(\"\");\n        setPassword2(\"\");\n    }, [success]);\n\n    const onFormSubmit = (event: FormEvent<HTMLFormElement>): void => {\n        event.preventDefault();\n        const data: UserResetPasswordData = {email: \"\", password, password2};\n        dispatch(updateUserPassword(data));\n    };\n\n    return (\n        <div className=\"password_reset\">\n            <h4><FontAwesomeIcon className=\"mr-2\" icon={faLock}/> Change Password</h4>\n            {success ? <div className=\"alert alert-success col-6\" role=\"alert\">{success}</div> : null}\n            <form className=\"mt-5\" onSubmit={onFormSubmit}>\n                <div className=\"form-group row\">\n                    <label className=\"col-sm-3 col-form-label\">Enter a new password: </label>\n                    <div className=\"col-sm-4\">\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            className={passwordError ? \"form-control is-invalid\" : \"form-control\"}\n                            value={password}\n                            onChange={(event) => setPassword(event.target.value)}/>\n                        <div className=\"invalid-feedback\">{passwordError}</div>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label className=\"col-sm-3 col-form-label\">Confirm password: </label>\n                    <div className=\"col-sm-4\">\n                        <input\n                            type=\"password\"\n                            name=\"password2\"\n                            className={password2Error ? \"form-control is-invalid\" : \"form-control\"}\n                            value={password2}\n                            onChange={(event) => setPassword2(event.target.value)}/>\n                        <div className=\"invalid-feedback\">{password2Error}</div>\n                    </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-dark\">\n                    <FontAwesomeIcon className=\"mr-3\" icon={faUndo}/>Change\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}