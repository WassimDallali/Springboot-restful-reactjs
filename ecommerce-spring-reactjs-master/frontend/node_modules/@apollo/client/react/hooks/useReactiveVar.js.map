{"version":3,"file":"useReactiveVar.js","sourceRoot":"","sources":["../../../src/react/hooks/useReactiveVar.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,eAAe,EAAE,MAAM,OAAO,CAAC;AAG7D,MAAM,UAAU,cAAc,CAAI,EAAkB;IAClD,IAAM,KAAK,GAAG,EAAE,EAAE,CAAC;IAGb,IAAA,KAAe,QAAQ,CAAC,KAAK,CAAC,EAA3B,QAAQ,QAAmB,CAAC;IAIrC,eAAe,CAAC,cAAM,OAAA,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAzB,CAAyB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAe1D,SAAS,CAAC,cAAM,OAAA,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAd,CAAc,EAAE,EAAE,CAAC,CAAC;IAEpC,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import { useState, useEffect, useLayoutEffect } from 'react';\nimport { ReactiveVar } from '../../core';\n\nexport function useReactiveVar<T>(rv: ReactiveVar<T>): T {\n  const value = rv();\n  // We don't actually care what useState thinks the value of the variable\n  // is, so we take only the update function from the returned array.\n  const [, setValue] = useState(value);\n  // We subscribe to variable updates on initial mount and when the value has\n  // changed. This avoids a subtle bug in React.StrictMode where multiple listeners\n  // are added, leading to inconsistent updates.\n  useLayoutEffect(() => rv.onNextChange(setValue), [value]);\n  // Once the component is unmounted, ignore future updates. Note that the\n  // above useEffect function returns a mute function without calling it,\n  // allowing it to be called when the component unmounts. This is\n  // equivalent to the following, but shorter:\n  // useEffect(() => {\n  //   const mute = rv.onNextChange(setValue);\n  //   return () => mute();\n  // }, [value])\n\n  // We check the variable's value in this useEffect and schedule an update if\n  // the value has changed. This check occurs once, on the initial render, to avoid\n  // a useEffect higher in the component tree changing a variable's value\n  // before the above useEffect can set the onNextChange handler. Note that React\n  // will not schedule an update if setState is called with the same value as before.\n  useEffect(() => setValue(rv()), []);\n\n  return value;\n}\n"]}